/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#define third_layer 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC   |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | LSHFT  |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
// | LCTRL  |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ENT  |
//                    | GUI | LWR | SPC |   | TAB | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp ;    &kp BSPC
   &kp LSHFT &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp ENT
                  &kp LGUI &mo 1 &kp SPACE   &kp TAB &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  1    |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
// | LSHFT| BT1   | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | LCTRL| BTCLR |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | TAB |     | ALT |
                        bindings = <
   &kp ESC    &kp N1        &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp DEL
   &bt LSHFT  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp CTRL   &kb BT_CLR    &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp TAB  &mo 3   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |  1  |  2  | 3   |  4  |  5  |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |  6  |  7  | 8   |  9  |  0  |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp ESC    &kp EXCL   &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LSHFT  &kp N1     &kp N2 &kp N3   &kp N4   &kp N5       &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LCTRL  &kp N6     &kp N7 &kp N8   &kp N9   &kp N0       &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &mo 3   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                third_layer {
// -----------------------------------------------------------------------------------------
// |  F1  | F2  | F3  | F4  | F5  | F6  |   | F7      | F8          | F9  | F10 | F11 | F12  |
// | CTRL |     |     |     |     |     |   | K_MUTE  | K_VOL_UP    |     |     |     |      |
// | SHFT |     |     |     |     |     |   |         | K_VOL_DN    |     |     |     |      |
//                    | GUI |     | SPC |   | TAB     |             | ALT |
                        bindings = <
   &kp F1     &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &kp F7      &kp F8        &kp F9  &kp F10 &kp F11 &kp F12    
   &kp LSHFT  &trans  &trans  &trans  &trans  &trans      &kp K_MUTE  &kp K_VOL_UP  &trans  &trans  &trans  &trans
   &kp LCTRL  &trans  &trans  &trans  &trans  &trans      &trans      &kp K_VOL_DN  &trans  &trans  &trans  &ENT
                             &kp LGUI &trans  &kp SPACE   &kp TAB     &trans        &kp RALT
                        >;
                };
        };
};
